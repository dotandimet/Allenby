[{"notes":"","text":"# Mojolicious\n## Duct Tape for the HTML5 Web","label":""},{"notes":"","text":"I'm Dotan Dimet, I work for Evogene, we do Plant Bioinformatics\r\nBuild big databases (Oracle) and do queries, reports and UI for researchers\r\nWeb stuff is just how we do UI - we don't deploy in the wild \r\n\r\nBioinformatics & web stuff are both historically in Perl's wheelhouse\r\n","label":""},{"notes":"","text":"Request \/ Response 2\r\n","label":""},{"notes":"","text":"#CGI\n - single process \n* eats (input)\n* shoots (output)\n* and leaves (exit)","label":""},{"notes":"","text":"* write your own\n* CGI::Application\n* CGI::Prototype\n* no, seroiusly, write your own","label":""},{"notes":"","text":"Persistant \r\n\r\n* mod_perl - interpreter lives in server, program hangs around\r\n* FastCGI - independant process web server communicates with\r\n* Stand-alone server\r\n* PSGI\/Plack\r\n","label":""},{"notes":"","text":"* HTTP::Engine\n* PSGI, Plack\n* Mojo","label":""},{"notes":"","text":"MVC frameworks \nMason\nMaypole\nCatalyst\nJifty","label":""},{"notes":"","text":"web app - \nState Transitions\nRendering a page from Data","label":""},{"notes":"","text":"Maypole\nClass::DBI\nTemplate::Toolkit\nmod_perl","label":""},{"notes":"","text":"Catalyst\nyes, but\ninsanely modular.","label":""},{"notes":"","text":"Mojolicious\nDon't tell me how to model my data\nHelp me do the","label":""},{"notes":"","text":"Dispatching:","label":""},{"notes":"","text":"Square: myapp.cgi?foo=baz&bar=42\nCool: \/myapp\/bar\/42","label":""},{"notes":"","text":"# myapp.cgi\nuse CGI;\nmy $req = CGI->new;\nif ($req->param('foo') eq 'baz') {\n    my ($id) = $req->param('bar');\n    doBaz($id);\n}\nelsif ($req->param('foo') eq 'burt') {\n...","label":""},{"notes":"","text":"My first vim power tip: %\n(bracket bouncing through the spaghetti code)","label":""},{"notes":"","text":"Rendering:","label":""},{"notes":"","text":"Mojolicious\nNew Web Framework from Sebastian Reidel\nSebastian was the chief maintainer of Maypole (Class::DBI+Template-Toolkit+mod_perl)\nWanted to make radical changes\nGot booted\nStarted Catalyst (Like Maypole, except super configurable)\nWanted to make radical changes\nGot booted\nWent to work on other things\nworked with Ruby on Rails\nBrought back Mojolicious","label":""},{"notes":"","text":"Originally called Mojo\nMojo is the foundation of Mojolicious\nMojo is a complete HTTP 1.1 Implementation\nRFC driven development\nTest driven development","label":""},{"notes":"","text":"Mojolicious is super focused\nWhat it is concerned with is what to do when a given URL is asked for\nUsually the answer is: run this method of that class and render this template.","label":""},{"notes":"","text":"Dotan Dimet\r\n\r\nדותן דימט\r\n\r\nProgramming Perl for 10 years\r\n\r\n*Christ. That's long.*","label":""},{"notes":"","text":"\r\nPerl was the duct tape of the web\r\nbrowser and server talk in HTTP - stateless, text based protocol over TCP\/IP\r\nbrowser renders text (HTML) into page\/form UI\r\nHTML: text that defines pages, links, forms\r\n","label":""},{"notes":"","text":"Web Programming\r\n\r\n* Distributed\r\n* Scalable\r\n* Standard\/Open","label":""},{"notes":"","text":"Data @ Server\r\n\r\nPresentation\/Interaction in Browser\r\n\r\nTalk HTTP to me, baby","label":""},{"notes":"","text":"### HTTP\r\n\r\n* Text-based\r\n* Stateless\r\n* Connect, Request, Response, Close","label":""},{"notes":"","text":"Always looking for a good web framework.\r\n\r\nMVC is *Hard*","label":""},{"notes":"","text":"![Romantically Apocalyptic](\/blastwave1.jpg)\r\n\r\n\r\n\r\n[yko: *Sometimes sri reminds me captain from Romantically Apocalyptic*](http:\/\/irclog.perlgeek.de\/mojo\/2010-07-14#i_2552055)","label":""},{"notes":"","text":"![part 2](\/blastwave2.jpg)","label":""},{"notes":"","text":"","label":""},{"notes":"","text":"#Mojolicious\r\n\r\n\r\n###Duct Tape for The HTML5 Web","label":""},{"notes":"","text":"Request \/ Response 2\r\n","label":""},{"notes":"","text":"I'm Dotan Dimet, I work for Evogene, we do Plant Bioinformatics\r\nBuild big databases (Oracle) and do queries, reports and UI for researchers\r\nWeb stuff is just how we do UI - we don't deploy in the wild \r\n\r\nBioinformatics & web stuff are both historically in Perl's wheelhouse\r\n","label":""}]
