[{"notes":"","text":"<ul>\r\n<li>Perl was the duct tape of the web\r\n<li>browser and server talk in HTTP\r\n<ul>\r\n<li>stateless, text based protocol over TCP\/IP\r\n<\/ul>\r\n<li>browser renders text (HTML) into page\/form UI\r\n<li>HTML: text that defines pages, links, forms\r\n<\/ul>","label":""},{"notes":"","text":"Request \/ Response","label":""},{"notes":"","text":"CGI - single process\r\n<ul><li>eats (input)\r\n<li>shoots (output)\r\n<li> and leaves (exit)\r\n<\/ul>\r\n<pre>\r\n#!\/usr\/bin\/perl -T\r\nmy $c = CGI->new;\r\nmy ($num) = ($c->param('quess') =~ \/(\\d+)\/);\r\nprint $c->header;\r\nif ($num == 7) {\r\n  print \"Correct\";\r\n} else { print \"Guess again\" }\r\n<\/pre>\r\n<\/pre>","label":""},{"notes":"","text":"write your own\nCGI::Application\nCGI::Prototype\nno, seroiusly, write your own","label":""},{"notes":"","text":"mod_perl - interpreter lives in browser, program hangs around\nMason\nMaypole\nCatalyst\nJifty","label":""},{"notes":"","text":"web app - \nState Transitions\nRendering a page from Data","label":""},{"notes":"","text":"Maypole\nClass::DBI\nTemplate::Toolkit\nmod_perl","label":""},{"notes":"","text":"Catalyst\nyes, but\ninsanely modular.","label":""},{"notes":"","text":"Mojolicious\nDon't tell me how to model my data\nHelp me do the ","label":""},{"notes":"","text":"<h2>Dispatching<\/h2>\r\n<p>What code to run when<\/p>\r\n<p>A way to organize the state machine of your web application<p>\r\n","label":""},{"notes":"","text":"<h3>Square:<\/h3>\r\n<ul><li>myapp.cgi?foo=baz&bar=42<\/li><\/ul>\r\n<h3>Cool: <\/h3>\r\n<ul><li>\/myapp\/bar\/42<\/li><\/ul>\r\n","label":""},{"notes":"","text":"<pre>\r\n# myapp.cgi\r\nuse CGI;\r\nmy $req = CGI->new;\r\nif ($req->param('foo') eq 'baz') {\r\n    my ($id) = $req->param('bar');\r\n    doBaz($id);\r\n}\r\nelsif ($req->param('foo') eq 'burt') {\r\n...\r\n<\/pre>","label":""},{"notes":"","text":"My first vim power tip: %\n(bracket bouncing through the spaghetti code)","label":""},{"notes":"","text":"Rendering:\n\n\n\n","label":""},{"notes":"","text":"test test","label":""},{"notes":"","text":"testy test","label":""},{"notes":"","text":"<h1>BON! BON!BOB!<\/h1>","label":""}]